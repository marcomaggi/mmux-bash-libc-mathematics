\input texinfo.tex
@c %**start of header
@setfilename mmux-bash-libc-mathematics.info
@settitle MMUX Bash Libc Mathematics
@c %**end of header

@include version.texi
@include macros.texi

@c page
@c ------------------------------------------------------------
@c Values.
@c ------------------------------------------------------------

@set TITLE                      MMUX Bash Libc Mathematics

@c To be used as @value{PACKAGE} whenever we need to include the full
@c name of this package.
@set PACKAGE                    MMUX Bash Libc Mathematics

@c To be used as @value{PACKAGE} whenever we need to include the
@c nickname of the project: the name that is used to compose the
@c distribution tarball or the web address.
@set PACKAGE_NICKNAME           mmux-bash-libc-mathematics

@c To be used as @value{AUTHOR} whenever we need to include the list of
@c authors of this document.
@set AUTHOR                     Marco Maggi

@c To be used as @value{AUTHOR_EMAIL} whenever we need to include the
@c email of the *single* author of this document.
@set AUTHOR_EMAIL               @email{mrc.mgg@@gmail.com}

@c To be used as @value{COPYRIGHT_YEARS} whenever we need to include the
@c list of copyright years.
@set COPYRIGHT_YEARS            2024

@c ------------------------------------------------------------

@set PackageAutoconfPrefix              MMUX_BASH_LIBC_MATHEMATICS
@set PackagePkgconfigModule             mmux-bash-libc-mathematics
@set PackageLibsVar                     @env{MMUX_BASH_LIBC_MATHEMATICS_LIBS}
@set PackageCflagsVar                   @env{MMUX_BASH_LIBC_MATHEMATICS_CFLAGS}
@c This is the stem of the library in "libmmux-bash-libc-mathematics.so".
@set PackageLibstem                     mmux-bash-libc-mathematics
@set PackageApiPrefixLower              mmux_libc_math_
@set PackageApiPrefixUpper              MMUX_LIBC_MATH_

@set PackageHeader                      mmux-bash-libc-mathematics.h
@set PackageHeaderFile                  @file{@value{PackageHeader}}

@set GithubUrl                 @url{https://github.com/marcomaggi/@value{PACKAGE_NICKNAME}}
@set BitbucketUrl              @url{https://bitbucket.org/marcomaggi/@value{PACKAGE_NICKNAME}}
@set DownloadUrl               @url{https://bitbucket.org/marcomaggi/@value{PACKAGE_NICKNAME}/downloads}
@set DocumentationUrl          @url{https://marcomaggi.github.io/docs/@value{PACKAGE_NICKNAME}.html}

@c page
@c ------------------------------------------------------------
@c Local macros.
@c ------------------------------------------------------------



@c page
@c ------------------------------------------------------------
@c Copyright notice.
@c ------------------------------------------------------------

@copying

This document describes version @value{VERSION} of @value{PACKAGE}, a package implementing
additional builtin commands for the @gnu{} Bash shell; to do so it installs a C language library and
a shell script which is meant to be sourced in a Bash session or script.

The library supports @posix{} platforms.  Only for testing: this package depends on the external
package @acronym{MBFL}.

This package is distributed under the terms of the @gnu{} Lesser General Public License (@lgpl{}).

The latest release can be downloaded from:

@center @value{DownloadUrl}

@noindent
development takes place at:

@center @value{GithubUrl}

@noindent
and as backup at:

@center @value{BitbucketUrl}

@noindent
Copyright @copyright{} @value{COPYRIGHT_YEARS} by @value{AUTHOR} @value{AUTHOR_EMAIL}

@quotation
Permission is granted to copy, distribute and/or modify this document under the terms of the @gnu{}
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being ``@gnu{} Free Documentation License'' and ``@gnu{} Lesser
General Public License'', no Front--Cover Texts, and no Back--Cover Texts.  A copy of the license is
included in the section entitled ``@gnu{} Free Documentation License''.
@end quotation
@end copying

@c page
@c ------------------------------------------------------------
@c Headers.
@c ------------------------------------------------------------

@titlepage
@title @value{TITLE}
@subtitle Revision @value{VERSION}
@author @value{AUTHOR} @value{AUTHOR_EMAIL}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c ------------------------------------------------------------

@ifinfo
@dircategory Development
@direntry
* mmux-bash-libc-mathematics: (mmux-bash-libc-mathematics).  Additional GNU Bash builtins.
@end direntry
@end ifinfo

@c ------------------------------------------------------------

@ignore
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex fn cp
@end ignore

@c page
@ifnottex
@node Top
@top @value{TITLE}

@insertcopying

@menu
* overview::                    Overview of the package.
* init::                        Library initialisation.
* version::                     Version functions.
* format::                      Input and output formats.
* arithmetics::                 Arithmetics builtins.
* trigonometric::               Trigonometric builtins.
* hyperbolic::                  Hyperbolic builtins.

Appendices

* Package License::             GNU Lesser General Public License.
* Documentation License::       GNU Free Documentation License.
* references::                  Bibliography and references.

Indexes

* concept index::               An entry for each concept.
* function index::              An entry for each function.
* variable index::              An entry for each variable.
* type index::                  An entry for each type.
@end menu
@end ifnottex

@c page
@node overview
@chapter Overview of the package


This document describes version @value{VERSION} of @value{PACKAGE}, a package implementing
additional builtin commands for the @gnu{} Bash shell; to do so it installs a C language library and
a shell script which is meant to be sourced in a Bash session or script.

This package supports @posix{} platforms.  Only for testing: this package depends on the external
package @acronym{MBFL}.

@cindex @value{PackageHeaderFile}, header file
@cindex Header file @value{PackageHeaderFile}
@value{PACKAGE} installs the single header file @value{PackageHeaderFile}.  All the function names
in the @api{} are prefixed with @code{@value{PackageApiPrefixLower}}; all the preprocessor symbol
names are prefixed with @code{@value{PackageApiPrefixUpper}}; all the type names are prefixed with
@code{@value{PackageApiPrefixLower}} and suffixed with @code{_t}.

@strong{Notice that, before using the library, we need to call the global initialisation function
@cfunc{mmux_bash_libc_mathematics_library_init}}.

@menu
* overview linking::            Linking code with the library.
@end menu

@include overview-linking.texi

@c page
@node init
@chapter Library initialisation


@deftypefun void mmux_bash_libc_math_library_init (void)
Initialise the internal structures of the library.  It is fine to call this function multiple times.

Every time a builtin is enabled in a shell process: this function is called.
@end deftypefun

@c page
@node version
@chapter Version functions


The installed libraries follow version numbering as established by the @gnu{} Autotools.  For an
explanation of interface numbers as managed by @gnu{} Libtool @xref{Libtool versioning, interface,
Libtool's versioning system, libtool, Shared library support for @gnu{}}.


@deftypefun {char const *} mmux_bash_libc_math_version_string (void)
Return a pointer to a statically allocated @asciiz{} string representing the interface version
number.
@end deftypefun


@deftypefun int mmux_bash_libc_math_version_interface_current (void)
Return an integer representing the library interface current number.
@end deftypefun


@deftypefun int mmux_bash_libc_math_version_interface_revision (void)
Return an integer representing the library interface current revision number.
@end deftypefun


@deftypefun int mmux_bash_libc_math_version_interface_age (void)
Return an integer representing the library interface current age.
@end deftypefun

@c page
@node format
@chapter Input and output formats


Under @gnu{} Bash: everything is a string.  Every time we call a builtin: its arguments are just
string and we have to convert them into internal C language @code{double} representations.


@deffn Builtin mmux-bash-libc-math-result-format @var{NEW_FORMAT}
@deffnx Builtin mmux-bash-libc-math-result-format @var{NEW_FORMAT} @var{OLD_FORMAT_VARNAME}
When called with one argument: store internally a copy of the string @var{NEW_FORMAT} to be used as
format for floating--point result numbers.

@example
add 1 2         @print{} 3.00000

mmux-bash-libc-math-result-format "%.1lf"
add 1 2         @print{} 3
@end example

When called with two arguments: in addition store the previous format, as a string, in the local
variable @var{OLD_FORMAT_VARNAME}.

@example
mmux-bash-libc-math-result-format "%.1lf" OLD_FORMAT

$OLD_FORMAT     @print{} "%lf"
@end example
@end deffn


@c page
@node arithmetics
@chapter Arithmetics builtins


@deffn Builtin add @varo{DOUBLE} @vari{DOUBLE} @dots{}
Print a string which is the result of the operation:

@example
@varo{DOUBLE} + @vari{DOUBLE} + @dots{}
@end example

If only one operand is given: print that operand.

@example
add 1.3 2.5             @print{} 3.80000
@end example
@end deffn


@deffn Builtin sub @varo{DOUBLE} @vari{DOUBLE} @dots{}
Print a string which is the result of the operation:

@example
@varo{DOUBLE} - (@vari{DOUBLE} + @dots{})
@end example

If only one operand is given: print that operand.

@example
sub 3 1                 @print{} 2.00000
sub 10 1 3              @print{} 6.00000
@end example
@end deffn


@deffn Builtin mul @varo{DOUBLE} @vari{DOUBLE} @dots{}
Print a string which is the result of the operation:

@example
@varo{DOUBLE} * @vari{DOUBLE} * @dots{}
@end example

If only one operand is given: print that operand.

@example
mul 2 3 5               @print{} 30.00000
@end example
@end deffn


@deffn Builtin div @varo{DOUBLE} @vari{DOUBLE} @dots{}
Print a string which is the result of the operation:

@example
@varo{DOUBLE} / (@vari{DOUBLE} * @dots{})
@end example

If only one operand is given: print that operand.

@example
div 12 3                @print{} 4.00000
div 24 2 3              @print{} 4.00000
@end example
@end deffn


@deffn Builtin neg @var{DOUBLE}
Print a string which is the result of the operation:

@example
- @var{DOUBLE}
@end example

@noindent
just invert the sign of the operand.

@example
neg 12                  @print{} -12.00000
@end example
@end deffn

@c page
@node trigonometric
@chapter Trigonometric builtins


@deffn Builtin sin @var{DOUBLE}
@deffnx Builtin cos @var{DOUBLE}
@deffnx Builtin tan @var{DOUBLE}
Print a string representing the result of applying the trigonometric sine, cosine and tangent
function to @var{DOUBLE}.

@example
sin 1.2                 @print{} 0.93204
cos 1.2                 @print{} 0.93204
@end example
@end deffn


@deffn Builtin asin @var{DOUBLE}
@deffnx Builtin acos @var{DOUBLE}
@deffnx Builtin atan @var{DOUBLE}
@deffnx Builtin atan2 @vari{DOUBLE} @varii{DOUBLE}
Print a string representing the result of applying the trigonometric arc sine, arc cosine and arc
tangent function to @var{DOUBLE}.

@example
atan2 0.2 0.3           @print{} 0.5880
@end example
@end deffn


@c page
@node hyperbolic
@chapter Hyperbolic builtins



@c page
@c ------------------------------------------------------------
@c Appendices.
@c ------------------------------------------------------------

@include lgpl-3.0.texi
@include fdl-1.3.texi

@c page
@node references
@appendix Bibliography and references


The documentation of @value{PACKAGE} is available online:

@center @value{DocumentationUrl}

@noindent
the latest release of this package can be downloaded from:

@center @value{DownloadUrl}

@noindent
development takes place at:

@center @value{GithubUrl}

@noindent
and as backup at:

@center @value{BitbucketUrl}

@noindent
the package @acronym{MBFL} is available online:

@center @url{http://github.com/marcomaggi/mbfl/}

@c page
@node concept index
@appendix An entry for each concept

@printindex cp

@node function index
@appendix An entry for each function.

@printindex fn

@node variable index
@appendix An entry for each variable.

@printindex vr

@node type index
@appendix An entry for each type.

@printindex tp

@contents
@bye

@c end of file

